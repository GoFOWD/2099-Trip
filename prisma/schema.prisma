generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model schedule{
  id Int @id @default(autoincrement())
  startDate DateTime
  endDate DateTime
  Budget budget[]
  AirTicket airTicket[]
  Hotel hotel[]
  Country country[]
  Tour tour[]
  userId Int
  User userId @relation(fields: [userId], references: [Id])
}


enum TripType{
  ONE_WAY
  ROUND_TRIP
}

model airTicket	 {
  id Int @id @default(autoincrement())
  price Int
  airline String
  tripType TripType
  segments flightSegment[]
  scheduleId Int
  countryId Int
  Schedule schedule	@relation(fields: [scheduleId], references: [id])
  Country country	 @relation(fields: [countryId], references: [id])
}

model flightSegment{
  id Int @id @default(autoincrement())
  departurePort String
  arrivalPort String
  departureCountry String
  arrivalCountry String
  departureDate DateTime
  arrivalDate DateTime
  flightNumber String
  airTicketId Int
  airTicket airTicket @relation(fields: [airTicketId], references: [id])
  }
  
model User {
  id        String       @id @default(cuid())
  email     String       @unique
  password  String
  name      String?
  haveReservedAirLine Boolean @default(false)
  haveReservedionHotel Boolean @default(false)
  haveReservedTour Boolean @default(false)
  schedules Schedule[]
  diaries   Diary[]
}

model Tour {
  id             String       @id @default(cuid())
  reservedAt     DateTime
  location       String
  rating         Float?
  price          String

  userId         String
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  countryId      String
  country        Country      @relation(fields: [countryId], references: [id])
}