generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model schedule {
  id        Int         @id @default(autoincrement())
  startDate DateTime
  endDate   DateTime
  budgets   Budget[]
  AirTicket airTicket[]
  Hotel     hotel[]
  Country   country[]
  Tour      tour[]
  userId    Int
  User      userId      @relation(fields: [userId], references: [Id])
}

enum TripType {
  ONE_WAY
  ROUND_TRIP
}

model airTicket {
  id         Int             @id @default(autoincrement())
  price      Int
  airline    String
  tripType   TripType
  segments   flightSegment[]
  scheduleId Int
  countryId  Int
  Schedule   schedule        @relation(fields: [scheduleId], references: [id])
  Country    country         @relation(fields: [countryId], references: [id])
}

model flightSegment {
  id               Int       @id @default(autoincrement())
  departurePort    String
  arrivalPort      String
  departureCountry String
  arrivalCountry   String
  departureDate    DateTime
  arrivalDate      DateTime
  flightNumber     String
  airTicketId      Int
  airTicket        airTicket @relation(fields: [airTicketId], references: [id])
}

model User {
  id                   String     @id @default(cuid())
  email                String     @unique
  password             String
  name                 String?
  haveReservedAirLine  Boolean    @default(false)
  haveReservedionHotel Boolean    @default(false)
  haveReservedTour     Boolean    @default(false)
  schedules            Schedule[]
  diaries              Diary[]
}

model Tour {
  id         String   @id @default(cuid())
  reservedAt DateTime
  location   String
  rating     Float?
  price      String

  userId    String
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  countryId String
  country   Country @relation(fields: [countryId], references: [id])
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

model Diary {
  id        String   @id @default(cuid())
  title     String
  content   String
  date      String
  pic       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
}

model Hotel {
  id        String    @id @default(cuid())
  name      String
  price     Float?
  rating    Float?
  checkIn   String?
  checkOut  String?
  location  String
  countryId String?
  scheduled String?
  amenities Amenity[]

  schedules  Schedule @relation(fields: [scheduleId], references: [id])
  scheduleId String
}

model Amenity {
  id          String  @id @default(cuid())
  Amenityname String
  hotels      Hotel[]
}

model Budget {
  id Int @id @default(autoincrement())
  airTicketPlan Int
  hotelPlan Int
  actualHotelSpending Int
  totalBudget Int
  actualAirTicketSpending Int
  actualTourSpending Int
  otherSpending Int
  scheduleId Int
  schedule Schedule @relation(fields: [scheduleId], references: [id])
}
